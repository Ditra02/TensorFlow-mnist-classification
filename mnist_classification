{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyMdCzVmUsy8mGtVMNKlLb6z"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["Nama Lengkap : Asyafa Ditra Al Hauna <br>\n","Username : asyafa_ditra <br>\n","Email : aditra79@gmail.com <br>"],"metadata":{"id":"wXQyy7gZs2gb"}},{"cell_type":"markdown","source":["# Get Dataset"],"metadata":{"id":"DQXdsquqj8Ox"}},{"cell_type":"code","source":["import os\n","import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","from keras.datasets import mnist\n","import matplotlib.pyplot as plt"],"metadata":{"id":"JL2g_JV8j3eo"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z7YJd3QFfpgb","executionInfo":{"status":"ok","timestamp":1714191771665,"user_tz":-420,"elapsed":412,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"08101a5e-f482-4eb0-b0b6-b5ef3584b204"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n"]}],"source":["(train_X, train_y), (valid_X, valid_y) = mnist.load_data()"]},{"cell_type":"code","source":["print('X_train: ' + str(train_X.shape))\n","print('Y_train: ' + str(train_y.shape))\n","print('X_test:  '  + str(valid_X.shape))\n","print('Y_test:  '  + str(valid_y.shape))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_gEJbLEIgU-I","executionInfo":{"status":"ok","timestamp":1714191771665,"user_tz":-420,"elapsed":6,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"5129dd88-96e8-495f-86b8-3058f308013f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train: (60000, 28, 28)\n","Y_train: (60000,)\n","X_test:  (10000, 28, 28)\n","Y_test:  (10000,)\n"]}]},{"cell_type":"code","source":["plt.imshow(train_X[0], cmap='gray')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"UwaRHlenqiD5","executionInfo":{"status":"ok","timestamp":1714191772066,"user_tz":-420,"elapsed":405,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"f1651966-12df-417d-c755-406c2770b7c7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(f'image label {train_y[0]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vTBK-paJrPhX","executionInfo":{"status":"ok","timestamp":1714191772067,"user_tz":-420,"elapsed":6,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"09c5194d-1978-452b-fc0f-939fd8240a1c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["image label 5\n"]}]},{"cell_type":"code","source":["print(f'all label in dataset {np.unique(train_y)}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PmxjYu5Brvk1","executionInfo":{"status":"ok","timestamp":1714191772067,"user_tz":-420,"elapsed":5,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"34b3943e-b733-40b0-d2ce-ec569dd23df1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["all label in dataset [0 1 2 3 4 5 6 7 8 9]\n"]}]},{"cell_type":"markdown","source":["# preprocessing"],"metadata":{"id":"J0rTOxJcqopQ"}},{"cell_type":"code","source":["def reshape_and_normalize(images):\n","\n","    # Reshape the images to add an extra dimension\n","    images = np.expand_dims(images, axis=3)\n","\n","    # Normalize pixel values\n","    images = images / 255.0\n","\n","    return images"],"metadata":{"id":"x_75RVt1kaJZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_X = reshape_and_normalize(train_X)\n","valid_X = reshape_and_normalize(valid_X)\n","\n","print(f\"Maximum pixel value after normalization: {np.max(train_X)}\\n\")\n","print(f\"Shape of training set after reshaping: {train_X.shape}\\n\")\n","print(f\"Shape of one image after reshaping: {train_X[0].shape}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XJ4gPqgtZuPU","executionInfo":{"status":"ok","timestamp":1714191772067,"user_tz":-420,"elapsed":4,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"e8d822aa-ab08-4d50-ce42-06b9b0830af6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Maximum pixel value after normalization: 1.0\n","\n","Shape of training set after reshaping: (60000, 28, 28, 1)\n","\n","Shape of one image after reshaping: (28, 28, 1)\n"]}]},{"cell_type":"markdown","source":["# data augmentation"],"metadata":{"id":"FCh3OMXtqtJ_"}},{"cell_type":"code","source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","# Define the ImageDataGenerator for data augmentation\n","train_datagen = ImageDataGenerator(\n","    rotation_range=10,\n","    width_shift_range=0.1,\n","    height_shift_range=0.1,\n","    shear_range=0.1,\n","    zoom_range=0.1,\n","    horizontal_flip=False,\n","    vertical_flip=False\n",")\n","\n","# Fit the ImageDataGenerator to the training data\n","train_datagen.fit(train_X)\n","\n","# Create the generator for training data\n","train_generator = train_datagen.flow(\n","    x=train_X,\n","    y=train_y,\n","    batch_size=4,\n","    shuffle=True\n",")"],"metadata":{"id":"aPlv6ZrBdWDS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["validation_datagen = ImageDataGenerator(\n","                    rescale=1./255)\n","\n","valid_generator = validation_datagen.flow(\n","    x=valid_X,\n","    y=valid_y,\n","    batch_size=4,\n","    shuffle=False\n",")"],"metadata":{"id":"hadvEagloDzi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# build the model"],"metadata":{"id":"JsfVjH_Xqx2w"}},{"cell_type":"code","source":["def convolutional_model():\n","    model = tf.keras.models.Sequential([\n","      tf.keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(28,28,1)),\n","      tf.keras.layers.MaxPooling2D(2,2),\n","\n","      tf.keras.layers.Flatten(),\n","      tf.keras.layers.Dense(128, activation='relu'),\n","      tf.keras.layers.Dense(10, activation='softmax')\n","    ])\n","\n","    model.compile(optimizer='adam',\n","                  loss='sparse_categorical_crossentropy',\n","                  metrics=['accuracy'])\n","\n","    return model"],"metadata":{"id":"7OjebjnBaMVd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# training"],"metadata":{"id":"e7K4xqHaq26v"}},{"cell_type":"code","source":["model = convolutional_model()\n","\n","history = model.fit(train_X, train_y, epochs=5, validation_data=(valid_X,valid_y))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"doYZhwKmaS9e","executionInfo":{"status":"ok","timestamp":1714191810149,"user_tz":-420,"elapsed":35783,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"7f75c890-3750-4df4-b6d2-02f0f847ccc3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","1875/1875 [==============================] - 10s 3ms/step - loss: 0.1467 - accuracy: 0.9562 - val_loss: 0.0568 - val_accuracy: 0.9820\n","Epoch 2/5\n","1875/1875 [==============================] - 6s 3ms/step - loss: 0.0502 - accuracy: 0.9850 - val_loss: 0.0574 - val_accuracy: 0.9811\n","Epoch 3/5\n","1875/1875 [==============================] - 6s 3ms/step - loss: 0.0323 - accuracy: 0.9899 - val_loss: 0.0442 - val_accuracy: 0.9857\n","Epoch 4/5\n","1875/1875 [==============================] - 7s 4ms/step - loss: 0.0202 - accuracy: 0.9938 - val_loss: 0.0481 - val_accuracy: 0.9841\n","Epoch 5/5\n","1875/1875 [==============================] - 6s 3ms/step - loss: 0.0143 - accuracy: 0.9955 - val_loss: 0.0434 - val_accuracy: 0.9853\n"]}]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x5ZqtWt5acFI","executionInfo":{"status":"ok","timestamp":1714191810803,"user_tz":-420,"elapsed":660,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"f1d01ee5-6b1d-4d24-9170-7271cbecfa49"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 26, 26, 32)        320       \n","                                                                 \n"," max_pooling2d (MaxPooling2  (None, 13, 13, 32)        0         \n"," D)                                                              \n","                                                                 \n"," flatten (Flatten)           (None, 5408)              0         \n","                                                                 \n"," dense (Dense)               (None, 128)               692352    \n","                                                                 \n"," dense_1 (Dense)             (None, 10)                1290      \n","                                                                 \n","=================================================================\n","Total params: 693962 (2.65 MB)\n","Trainable params: 693962 (2.65 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["# evaluating"],"metadata":{"id":"mYw5UU1mq6yU"}},{"cell_type":"code","source":["my_dict = history.history\n","accuracy = my_dict['accuracy']\n","val_accuracy = my_dict['val_accuracy']\n","epochs = range(1, len(accuracy) + 1)\n","plt.plot(epochs, accuracy, label='accuracy')\n","plt.plot(epochs, val_accuracy, label='val_accuracy')\n","plt.xlabel(\"Epoch\")\n","plt.ylabel(\"Accuracy\")\n","plt.title(\"Accuracy curve\")\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"wQBupva5aeTq","executionInfo":{"status":"ok","timestamp":1714191810803,"user_tz":-420,"elapsed":10,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"488132e7-5168-48ce-f0f5-1facd385469b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7d8be032b3a0>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["loss = my_dict['loss']\n","val_loss = my_dict['val_loss']\n","plt.plot(epochs, loss, label='loss')\n","plt.plot(epochs, val_loss, label='val_loss')\n","plt.title('loss')\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":470},"id":"qo2hcFp-bjoz","executionInfo":{"status":"ok","timestamp":1714191810803,"user_tz":-420,"elapsed":8,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"b18e02a5-5f3d-48a4-c638-d779db50695c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7d8be032bdf0>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Test predict uploaded image"],"metadata":{"id":"Q-yMS3PGs_UL"}},{"cell_type":"code","source":["import tensorflow as tf\n","import numpy as np\n","import cv2\n","\n","def preprocess_image(image_path):\n","    # Load the image using OpenCV\n","    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)\n","\n","    # Resize the image to (28, 28)\n","    resized_image = cv2.resize(image, (28, 28))\n","\n","    # Normalize the pixel values to be between 0 and 1\n","    normalized_image = resized_image / 255.0\n","\n","    # Add a channel dimension to make it (1, 28, 28, 1)\n","    processed_image = np.expand_dims(normalized_image, axis=0)\n","    processed_image = np.expand_dims(processed_image, axis=-1)\n","\n","    return processed_image"],"metadata":{"id":"NgsIwZio3dsQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","from google.colab import files\n","from tensorflow.keras.preprocessing import image\n","import matplotlib.pyplot as plt\n","import matplotlib.image as mpimg\n","import matplotlib.pyplot as plt\n","import matplotlib.image as mpimg\n","%matplotlib inline\n","\n","uploaded = files.upload()\n","\n","for fn in uploaded.keys():\n","\n","  # predicting images\n","  path = fn\n","\n","\n","  img = image.load_img(path, target_size=(28,28))\n","  plt.imshow(img)\n","  plt.show()\n","\n","  images = preprocess_image(path)\n","\n","  print(f'Image size after preprocessing : {images.shape}')\n","\n","  classes = model.predict(images)\n","\n","  print(f'\\nthe file name : {fn}')\n","  print(f'\\nclasses probability : {classes}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":129},"id":"aqf4VKzJyQaX","executionInfo":{"status":"ok","timestamp":1714278000101,"user_tz":-420,"elapsed":9883,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"372fcc46-b461-4906-9d39-21e09feba926"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stderr","text":["Exception ignored in: <function _xla_gc_callback at 0x7a5970289870>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/jax/_src/lib/__init__.py\", line 98, in _xla_gc_callback\n","    def _xla_gc_callback(*args):\n","KeyboardInterrupt: \n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-ebed81d0-fc38-4338-a6ab-f3e19b1a63e5\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-ebed81d0-fc38-4338-a6ab-f3e19b1a63e5\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}}]},{"cell_type":"code","source":["max_index = np.argmax(classes)\n","\n","print(\"The image have class of : \", max_index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JEL9XqGz1G9-","executionInfo":{"status":"ok","timestamp":1714193631764,"user_tz":-420,"elapsed":383,"user":{"displayName":"Asyafa Ditra","userId":"09916089087338268674"}},"outputId":"bc07fcdd-6ee7-420f-bdad-3c3d3e996753"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The image have class of :  6\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"nPvee59V1zfv"},"execution_count":null,"outputs":[]}]}